@using NodaTime

<FluentStack Orientation="Orientation.Vertical" Width="100%">
    <label class="fluent-label">@Label @(Required ? "<span style=\"color: var(--accent-fill-rest);\">*</span>" : "")</label>
    <FluentDatePicker Required="@Required"
                      Placeholder="@Placeholder"
                      Value="@DateTimeValue"
                      ValueChanged="@OnValueChanged"
                      Width="@Width" />
</FluentStack>

@code {
    [Parameter] public string Label { get; set; } = "Date";
    [Parameter] public bool Required { get; set; } = false;
    [Parameter] public string Placeholder { get; set; } = "Select a date";
    [Parameter] public string Width { get; set; } = "100%";

    [Parameter] public LocalDate Value { get; set; } = LocalDate.FromDateTime(DateTime.Today);
    [Parameter] public EventCallback<LocalDate> ValueChanged { get; set; }

    private DateTime DateTimeValue
    {
        get => Value != default ? Value.ToDateTimeUnspecified() : DateTime.Today;
    }

    private async Task OnValueChanged(DateTime value)
    {
        var newValue = LocalDate.FromDateTime(value);
        if (newValue != Value)
        {
            Value = newValue;
            await ValueChanged.InvokeAsync(Value);
        }
    }
}